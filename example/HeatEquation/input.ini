#------------------------------------------------------------------------------#
# Description of the given parameters.
# The default flow direction:
#           X = 1 = the streamwise direction, flow direction.
#           Y = 2 = the wall-normal / radial direction.
#           Z = 3 = the spanwise direction.
#------------------------------------------------------------------------------#
# In [decomposition], please provide the dimensions for domain
# decomposition.
#           p_row [int]:
#           p_col [int]:
#------------------------------------------------------------------------------#
[decomposition]
p_row= 1
p_col= 1
#------------------------------------------------------------------------------#
# In [flowtype], please provide the basic flow information.
# iCase [int]:
#                       ICASE_CHANNEL = 1, &
#                        ICASE_PIPE    = 2, &
#                        ICASE_ANNUAL  = 3, &
#                        ICASE_TGV3D   = 4, &
#                        ICASE_TGV2D   = 5, &
#                        ICASE_SINETEST= 6, &
#                        ICASE_BURGERS = 7, &
#                        ICASE_INVSD_BURGERS = 8, &
#                        ICASE_HEATEQ  = 9
# ithermo [int]:
#            0 = No Energy Equation, No Thermodynamics, Default
#            1 = Flow with Thermodynamics.
# iCHT [int]:
#            0 = No Conjugate Heat Transfer. Default
#            1 = Thermal Flow with Conjugate Heat Transfer.
#------------------------------------------------------------------------------#
[flowtype]
icase= 9
ithermo= 0
icht= 0
idir= 1
#------------------------------------------------------------------------------#
# In [boundary], please provide flow boundary conditions.
# the boundary condition options:
#            IBC_INTERIOR    = 9, &
#            IBC_PERIODIC    = 1, &
#            IBC_UDIRICHLET  = 2, &
#            IBC_SYMMETRIC   = 3, &
#            IBC_ASYMMETRIC  = 4, &
#            IBC_NEUMANN     = 5, &
#            IBC_CONVECTIVE  = 6, &
#            IBC_TURBGEN     = 7, &
#            IBC_DATABASE    = 8
# ifbcx[int, int, real, real ]:
#           [int, int] = the two B.C. in the streamwise X direction at the two ends
#           [real, real] = the given velocity at this direction at two ends.
#                          valide only for Dirichlet B.C.
# ifbcy[int, int, real, real ]: same as above, but in Y direction.
# ifbcz[int, int, real, real ]: same as above, but in Z direction.
#------------------------------------------------------------------------------#
[boundary]
ifbcx= 1, 1, 0.0, 0.0
ifbcy= 1, 1, 0.0, 0.0
ifbcz= 1, 1, 0.0, 0.0
#------------------------------------------------------------------------------#
# In [flowparams], please provide Reynolds number and driven force type.
# ren[int]    : working Reynolds number
# idriven[int]: driven force type. Options:
#                        idriven = 0, no driven force
#                        idriven = 1, x, constant mass flow rate driven
#                        idriven = 2, x, skin friction, cf (undimensional)
#                        idriven = 3, x, pressure drop per unit length (Pa/m)
# drivenCf: the given driven force in format of Cf, Cf =  \tau_w/ (1/2 rho0 U0^2)
#           Cf   =  \tau_w/ (1/2 rho0 U0^2) = 2 * \tau_w^*
#           dp/L = \tau_w * S * L
#           This value is used only when idriven = 2
#------------------------------------------------------------------------------#
[flowparams]
ren= 100.0
idriven= 0
drivenCf=1.0E-3
#------------------------------------------------------------------------------#
# In [geometry], please provide the computational domain information.
#           All lengths are scaled by the half channel height or the radius of
#           the pipe interior diameter.
#           - The default channel in the wall-normal direction is y in [-1, 1]
#           - The default pipe in the wall-normal direction is r in [0, 1]
#           - The default Taylor Green Vortex Box is 2pi * 2pi * 2pi
#
# lxx [double]:
#           - scaled computational length of the streamwise direction
# lzz [double]
#           - scaled computational length of the spanwise direction for the
#             channel flow.
#           - for pipe flow, it is 2pi by default.
#           - Change it to any value < 2pi to get a fan-shaped Domain with
#             periodic spanwise direction.
# lyb [double]
#           - valid only for the annular flow.
#           - the length from the centre of channel /pipe to the bottom of y.
#             eg. - 1.0 for Channel flow, 0 for pipe flow
# lyt [double]
#           - valid only for the annular flow.
#           - the length from the centre of channel /pipe to the top y boundary.
#             eg. 1.0 for channel flow, 1 for pipe flow, 1.0 for nnnular flow.
#------------------------------------------------------------------------------#
[geometry]
lxx= 2.0
lyt= 2.0
lyb= 0.0
lzz= 2.0
#------------------------------------------------------------------------------#
# In [mesh], please provide the grid/cell numbers in each direction.
#            X = uniform distribution
#            Z = uniform distribution
#            Y = uniform or clustered/streching distribution
#
# ncx [int]:
#             - The cell number in the X direction
# ncz [int]:
#            - The cell number in the Z direction.
# ncy [int]:
#            - The cell number in the wall-normal direction.
#            - Cartesian: in the full channel height
#            - Cylindrical: in the radial length
# istret [int]
#           0 = ISTRET_NO
#           1 = ISTRET_2SIDES
#           2 = ISTRET_BOTTOM
#           3 = ISTRET_TOP
#           4 = ISTRET_CENTRE
# rstret [double]:
#           beta value in the stretching function.
#           See Eq.(54) of Laizet2009JCP
#------------------------------------------------------------------------------#
[mesh]
ncx= 1024 
ncy= 8
ncz= 8
istret= 0
rstret= 0.1
#------------------------------------------------------------------------------#
# In [initialization], please provide flow i.o.
# irestart[int]
#         the irestart options:
#                 INITIAL_RANDOM  = 0, &
#                 INITIAL_RESTART = 1, &
#                 INITIAL_INTERPL = 2
# nrsttckpt[int]
#             - the iteration restart from
# renIni[double]
#             - the initial Reynolds number for initialisation
# iterRenIniEnd[int]
#             - until which iteration the initial Reynolds number last
# initNoise[double]
#             - the velocity perturbaton level
#------------------------------------------------------------------------------#
[initialization]
irestart= 0
nrsttckpt= 400
renIni= 100.0
iterRenIniEnd= 1000
initNoise= 0.0
#------------------------------------------------------------------------------#
# In [timestepping], please provide time stepping related parameters.
# dt[double]:
#             - physical time step (unit: second)
#------------------------------------------------------------------------------#
[timestepping]
dt= 0.001
#------------------------------------------------------------------------------#
# In [schemes], please provide numerical scheme related parameters.
# iAccuracy[int]: accuracy for the 1st and 2nd deriviative and interpolation.
#               the accuracy options:
#                        IACCU_CD2 = 1, &
#                        IACCU_CD4 = 2, &
#                        IACCU_CP4 = 3, &
#                        IACCU_CP6 = 4
# iTimeScheme[int]: time marching scheme
#               the options:
#                       ITIME_RK3    = 3, &
#                       ITIME_RK3_CN = 2, &
#                       ITIME_AB2    = 1
# iviscous[int]: viscous term treatment
#               the options:
#                       2 = semi-implicit
#                       1 = explicit
#------------------------------------------------------------------------------#
[schemes]
iAccuracy= 4
iTimeScheme= 3
iviscous= 1
#------------------------------------------------------------------------------#
# In [simcontrol], please provide simulation control related parameters.
# nIterFlowFirst[int]
#             - flow fields simulation starts from
# nIterFlowLast[int]
#             - flow fields simulation ends at
# nIterThermoFirst[int]
#             - thermal fields simulation starts from
# nIterThermoLast[int]
#             - thermal fields simulation ends at
#------------------------------------------------------------------------------#
[simcontrol]
nIterFlowFirst= 1
nIterFlowLast= 1
nIterThermoFirst= 1
nIterThermoLast= 100
#------------------------------------------------------------------------------#
# In [ioparams], please provide data output related parameters.
# nfreqckpt[int]
#             - raw data written out every ... iterations
# nvisu[int]
#             - visulisation data written out every ... iterations
# nIterStatsStart[int]
#             - from which iteration the statistical results begin to calculate
# nfreqStats[int]
#             - the statistical results written out every ... iteration
#------------------------------------------------------------------------------#
[ioparams]
nfreqckpt= 200
nvisu= 1000
nIterStatsStart= 500
nfreqStats= 100
#------------------------------------------------------------------------------#
# In [thermohydraulics], please provide thermal thermohydraulics related parameters.
# ifluid[int] : fluid type
#             options:
#                   ISCP_WATER      = 1, &
#                   ISCP_CO2        = 2, &
#                   ILIQUID_SODIUM  = 3, &
#                   ILIQUID_LEAD    = 4, &
#                   ILIQUID_BISMUTH = 5, &
#                   ILIQUID_LBE     = 6
# igravity[int] : gravity direction
#               -1 = negtive X direction
#               +1 = positive X direction
#               -2 = negtive Y direction
#               +2 = positive Y direction
#               -3 = negtive Z direction
#               +3 = positive Z direction
# lenRef[double] : Reference length for normalisation. Unit: m
# t0Ref[double]  : Reference temperature for normaliaton. Unit: K
# tiRef[double]  : Temperature for initialisation. Unit: K
# itbcy[int, int] : thermal b.c in y direction
#               options:
#                 THERMAL_BC_CONST_T  = 0, &
#                 THERMAL_BC_CONST_H  = 1
# tbcy[double, double] : thermal bc values. dimensional.
#------------------------------------------------------------------------------#
[thermohydraulics]
ifluid= 3
igravity= 0
lenRef= 0.01
t0Ref= 400.0
tiRef= 450.0
itbcy= 1, 1
tbcy= 10000.0, 10000.0
